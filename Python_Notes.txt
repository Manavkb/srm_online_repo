Functions --> 

void display()
{
   printf("this is fucntion body");
}

display();

# default fucnction
def display():
    print("this is fucntion body")
	
display()	
	
# param fucnction
def add(num1, num2):
    print(num1 + num2)
	
add(10, 20)	

#function with return type

def greet(name):
    return "Welcome " + name 

print(greet("Ujjwal"))	
 
greet_message = greet("Aditya")
print(greet_message)

# Declare
num = int()
print(num)
	
#function declration
def show():	
    pass
	
def numbers(*take_nums):
	print(take_nums)

numbers(10, 20, 30, 40)

def about_person(**details):
	print(details)

about_person(name="Ujjwal", age=18, city="Lucknow")


# default values inside fucntion param 
def account(salary = 101):
	print(salary) 
	
account()	
account(501)


# Error
def take_multi_values(*nums, num2, num3):
	print(nums, num2, num3)

take_multi_values(10, 20, 30, 40, 50)

# Error Solution
def take_multi_values(*nums, num2 = 60, num3 = 70):
	print(nums, num2, num3)

take_multi_values(10, 20, 30, 40, 50)

# (10, 20, 30, 40, 50) 60 70

# Quiz --> Solution --> Error 
def take_multi_values(num1 = 10, *nums1, *nums2):
	print(num1, nums1, nums2)

take_multi_values(30, 40, 50)

# KeyWord Types function

def about_student(name, age, ac, pc):
	print(name, age, ac, pc)

about_student(age = 20, name = "Ujjwal", ac = 123, pc = 420)


def about_student(name = "Ujjwal", age = 20):
	print(name, age)

about_student(age = 19, name = "Yug")



# Nested Functions

def outer(num1, num2):
    sum = num1 + num2
    def inner(take_sum):
        final_result = take_sum / 2
        return final_result
    return inner(sum)

print(outer(10, 20))


def outer(num1, num2):
    sum = num1 + num2
    def inner():
        return sum / 2        
    return inner()

print(outer(10, 20))


# Lamda(UnKnown) Functions -> be default returns RETURN

def greet(name):
	return "Welcome " + name
	
greet()


# 1st Example
greet = lambda : "Welcome"
print(greet())


# 2nd Example
greet = lamda name: "Welcome " + name
greet()

# Can we save normal fucntionsjust like lambda function --> Yes

def greet(name):
    return "Welcome " + name

function_saved = greet

print(function_saved("Ujjwal"))

-------------------------

# Data Structures


group_of_chars = "abcd"
print(group_of_chars[0])
print(group_of_chars[1])
print(group_of_chars[2])
print(group_of_chars[3])

print(id(group_of_chars))
print(id(group_of_chars[0]))
print(id(group_of_chars[1]))
print(id(group_of_chars[2]))
print(id(group_of_chars[3]))

1856373959600
1856372001776
1856371712240
1856370131632
1856370131376

# String Indexing 

Negative(-1) & Positive(0)

name = "Lucknow"
print(len(name))

print(name[0])
print(name[-1])
print(name[8])

# Slicing [subString][start : stop : step]

print(name[:])
print(name[1: 4])

# Quiz
print(name[0:7])
print(name[::1])
print(name[0:7:-1]) => no output
print(name[-1:-8:-1])
print(name[-1:-8:1]) => no output
print(name[-8:])


name = "Manav"
print(id(name[0]))
print(id(name[1]))
print(id(name[2]))
print(id(name[3]))
print(id(name[4]))

print(name.count("a"))

# Error -> String is Immutable
name[1] = "b"


name = "Manav Bharatiya"

print(name.split(" "))
print(name)

